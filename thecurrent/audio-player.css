/* Audio Player UI */

.audio-player .playerWrapper {
  width: 100%;
  display: grid;
  row-gap: 0.5rem;
  column-gap: 1.5rem;
  align-items: center;
  grid-template:
    'info info info' auto
    'play volm volm' auto
    'time time mini' auto
    / auto 1fr min-content;
  line-height: 1.125;
}

.audio-player .playerColumn1 {
  grid-area: play;
}

.audio-player .playerColumn2 {
  grid-area: info;
}

.audio-player .playerColumn3 {
  grid-area: time;
}

.audio-player .playerColumn4 {
  grid-area: volm;
  justify-self: flex-end;
  width: 100%;
  max-width: 20rem;
}

.audio-player .stickPlayerButton {
  grid-area: mini;
}

.audio-player .playerControls,
.audio-player .progressBarContainer,
.audio-player .volumeBarContainer {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
}

.audio-player .playerControls button + button {
  margin-left: 0.5rem;
}

.audio-player .textSection div {
  display: inline;
}

.audio-player .textSection div + div::before {
  content: '\a0\b7\a0';
}

.audio-player .progressBar {
  height: 0.5rem;
  position: relative;
  cursor: pointer;
}

.audio-player .player_time {
  width: max-content;
  font-size: var(--type-size-mini);
  font-weight: 600;
  font-variant-numeric: tabular-nums;
  line-height: 1;
}

.audio-player .progressBarControls {
  flex-grow: 1;
  padding: 0 0.5rem;
}

.audio-player .timelineBg {
  position: absolute;
  height: 100%;
  width: 100%;
  border-radius: 0.5rem;
  background-color: var(--color-invr);
}

.audio-player .currentProgress {
  border-radius: 0.5rem;
  background-color: var(--color-link);
  position: absolute;
  height: 100%;
  left: 0;
}

.audio-player .currentProgress::after {
  content: '';
  position: absolute;
  top: -0.5rem;
  right: -0.5rem;
  width: 1.5em;
  height: 1.5rem;
  border-radius: 1.5rem;
  background-color: var(--color-link-active);
}

.audio-player .volumeBarContainer {
  max-width: 20rem;
}

.audio-player .volumeBarControls {
  flex-grow: 1;
  padding-left: 0.5rem;
  cursor: pointer;
}

.audio-player .volumeBar {
  position: relative;
  width: 100%;
  height: 0.25rem;
  border-radius: 0.25rem;
  background-color: var(--color-invr);
}

.audio-player .volumeBar .currentProgress {
  border-radius: 0.25rem;
}

.audio-player .volumeBar .currentProgress::after {
  top: -0.375rem;
  right: -0.375rem;
  width: 1em;
  height: 1rem;
  border-radius: 1rem;
}


.audio-player button {
  cursor: pointer;
  outline: none;
  border: none;
  padding: 0.25rem;
  border-radius: var(--type-size-hefty);
  font-size: var(--type-size-hefty);
  line-height: 1;
  color: var(--color-bkgd-dk);
  background-color: var(--color-text-dk);
}

.audio-player button:hover {
  background-color: var(--color-bkgd-lt);
}

.audio-player button:focus {
  background-color: var(--color-bkgd-lt);
  box-shadow: 0 0 0 0.25rem inset var(--color-link);
}

.audio-player button:active {
  background-color: var(--color-bkgd-lt);
  color: var(--color-link-active);
  box-shadow: 0 0 0 0.25rem inset var(--color-link-active);
}

.audio-player .playPauseButton {
  border-radius: var(--type-size-huge);
  font-size: var(--type-size-huge);
}

.audio-player svg {
  display: block;
}

.audio-player .player-pause,
.audio-player .player_mute,
.audio-player .invisible {
  display: none;
}

@media screen and (min-width: 40em) {
  .audio-player .playerWrapper {
    grid-template:
      'play info info' auto
      'play volm volm' auto
      'time time mini' auto
      / auto 1fr min-content;
  }

  .audio-player .playerColumn2,
  .audio-player .playerColumn4 {
    justify-self: center;
  }
}

@media screen and (min-width: 50em) {
  .audio-player .playerWrapper {
    grid-template:
      'play info volm volm' auto
      'time time time mini' auto
      / auto 1fr 20rem min-content;
  }

  .audio-player .textSection > div {
    display: inherit;
  }
  
  .audio-player .textSection > div + div::before {
    content: none;
  }
  
  .audio-player .playerColumn2 {
    justify-self: flex-start;
  }
  
  .audio-player .playerColumn4 {
    justify-self: flex-end;
  }
}

@media screen and (min-width: 60em) {
  .audio-player .playerWrapper {
    grid-template:
      'play info volm volm' auto
      'play time time mini' auto
      / auto 1fr 20rem min-content;
  }
}
